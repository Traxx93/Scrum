@model Scrum.Models.SprintViewModel.AddSprintViewModel

@{
    ViewBag.Title = "AddSprint";
    var ProjectID = ViewBag.ProjectID;
}
<link href="~/Content/bootstrap.min.css" type="text/css" rel="stylesheet" />
<link href="~/Content/add-sprint.css" type="text/css" rel="stylesheet"/>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container form justify-content-md-center col-md-6">
        <div class="form-horizontal w-100">
            <h4>Create Sprint</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "controle-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ProjectID, new { htmlAttributes = new { @class = "form-control", @disabled = "true" } })
                    @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SprintName, htmlAttributes: new { @class = "controle-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.SprintName, new { htmlAttributes = new { @class = "form-control"
               } })
                    @Html.ValidationMessageFor(model => model.SprintName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control col-md-12" } })

                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.MainTask, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.MainTask, new { @class = "form-control col-md-12" })
                    @Html.ValidationMessageFor(model => model.MainTask, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    @Html.ActionLink("Back to List", "IndexSprintsForProject", new { projectID = ProjectID }, new { @class = "btn btn-default" })
                </div>
            </div>
            <div>
            </div>
        </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
