@model Scrum.Models.UserViewModel.AddUserViewModel

@{
    ViewBag.Title = "AddUser";
}

@Styles.Render("~/Content/themes/base/css")
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/bootstrap.css")

<div class="background-wrapper">
    <h2>Add User</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        
        <div class="form-horizontal add-user-div"> 
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-12" })
                <div class="col-12">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control col-12" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
                
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-12" })
                <div class="col-12">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control col-12" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-12" })
                <div class="col-12">
                    @Html.EnumDropDownListFor(x => x.Role, "Select role for a user", new { @class = "form-control col-12" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-12" })
                <div class="col-12">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-12" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-12" })
                <div class="col-12">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @type = "password", @class = "form-control col-12" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class="btn btn-default"})
                </div>
            </div>
        </div>
    }
</div>
